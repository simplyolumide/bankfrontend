{"version":3,"sources":["components/Home.js","components/CreateAccount.js","components/Detail.js","components/AccountDetails.js","components/Withdraw.js","components/Deposit.js","components/Transactions.js","App.js","index.js"],"names":["App","react_default","a","createElement","className","id","data-animation-name","data-animation-duration","data-animation-delay","data-animation-direction","src","alt","Link","to","Component","CreateAccount","state","name","address","phone","balance","type","messageData","onFormSubmit","event","preventDefault","request","Request","crossDomain","method","redirect","headers","Headers","Content-Type","credentials","body","JSON","stringify","_this","fetch","then","response","json","data","setState","catch","errors","console","log","concat","_this2","this","sucessMessage","accountDetails","classes","role","message","Route","render","_ref","history","onClick","push","href","rel","onSubmit","acceptCharset","htmlFor","placeholder","value","onChange","e","target","style","textAlign","_ref2","marginRight","React","Detail","getFormatedDate","date","Date","toString","getAllTransation","props","accountInfo","transations","map","tran","key","_id","transationType","amount","accountNumber","lasttransation","_ref3","AccountDetails","getDtails","detailHtml","components_Detail","width","Withdraw","withdrawAmount","withdrawFund","res","errorMessage","marginTop","Deposit","depositAmount","depositFund","Transations","getTransation","BrowserRouter","Switch","exact","path","component","Home","Transactions","ReactDOM","src_App_0","document","querySelector"],"mappings":"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","file":"static/js/main.e899452d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\n\n\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"body\">\n      <section className=\"u-clearfix u-palette-3-base u-section-1\" id=\"carousel_1afe\">\n      <div className=\"u-clearfix u-sheet u-sheet-1\">\n        <div className=\"u-clearfix u-expanded-width u-layout-wrap u-layout-wrap-1\">\n          <div className=\"u-layout\">\n            <div className=\"u-layout-row\">\n              <div className=\"u-container-style u-layout-cell u-left-cell u-size-30 u-white u-layout-cell-1\">\n                <div className=\"u-container-layout u-container-layout-1\">\n                  <h2 className=\"u-custom-font u-font-georgia u-text u-text-palette-1-base u-text-1\" data-animation-name=\"slideIn\" data-animation-duration={1000} data-animation-delay={0} data-animation-direction=\"Down\">BANK MART</h2>\n                  <p className=\"u-text u-text-2\" data-animation-name=\"fadeIn\" data-animation-duration={1000} data-animation-delay={0} data-animation-direction>Saving for a better future</p>\n                </div>\n              </div>\n              <div className=\"u-align-right u-container-style u-layout-cell u-right-cell u-size-30 u-white u-layout-cell-2\">\n                <div className=\"u-container-layout\">\n                  <img src=\"images/money.jpeg\" alt=\"\" className=\"u-image u-image-default u-image-1\" />\n                  <div alt=\"\" className=\"u-image u-image-circle u-image-2\" />\n                  <p className=\"u-text u-text-palette-1-base u-text-3\">  \n                 <br></br> <Link to={'/create'} >Create Account </Link> \n                   <br></br> <Link to={'/deposit'} >Deposit</Link>  \n                    <br></br><Link to={'/withdraw'} >Withdraw</Link>\n                   <br></br> <Link to={'/AccountDetails'} >Get Account Details</Link>  \n                   <br></br>   <h5><Link to={'/Transactions'} >Get Account Transaction</Link> </h5> \n                   \n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    </div>\n  );\n}\n};","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nclass CreateAccount extends React.Component{\n\n    state = {\n      name: \"\",\n      address: \"\",\n      phone: \"\",\n      balance: \"\",\n      type: \"\",\n      messageData: null\n    }\n\n    onFormSubmit = (event) => {\n        event.preventDefault();\n        const request = new Request('/account/create', {\n          crossDomain:true,\n          method: 'POST',  \n          redirect: 'follow',\n          headers: new Headers({'Content-Type': 'application/json'}),\n          credentials: 'same-origin',\n          body: JSON.stringify({\n            name: this.state.name,\n            address: this.state.address,\n            phone: this.state.phone,\n            balance: this.state.balance,\n            type: this.state.type\n      })\n    });\n  \n        fetch(request)\n          .then(response => { return response.json(); })\n          .then(data => { this.setState({messageData: data})})\n          .catch(errors => { console.log(`Could not fetch previous account entries: ${errors}`);})\n\n\n       //   this.props.history.push('/');\n    }\n\n    render(){\n      var sucessMessage = \"\";\n      var accountDetails = \"\";\n      if (this.state.messageData !== null) {\n        let classes = \"alert alert-\" + this.state.messageData.type;\n        sucessMessage =  <div className={classes} role=\"alert\">{ this.state.messageData.message }</div>;\n        if(this.state.messageData.type === \"success\"){\n        accountDetails = <Route render={({ history}) => (\n          <button\n            type='button'\n            className=\"btn btn-primary\"\n            onClick={() => { history.push('/accountDetails') }}\n          >\n            Get Account Details\n          </button>\n            )} />\n          }\n      }\n\n        return(\n          <div className=\"body\">\n          <link href=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\" />\n          {/*---- Include the above in your HEAD tag --------*/}\n         \n            <div className=\"row\">\n              <div className=\"col-md-4 col-md-offset-4\">\n                <div className=\"panel panel-default\">\n                  <div className=\"panel-heading\">\n                    <h3 className=\"panel-title\">Create Account</h3>\n                  </div>\n                  <div className=\"panel-body\">\n                    <form  onSubmit={this.onFormSubmit} acceptCharset=\"UTF-8\" role=\"form\">\n                      <fieldset>\n                        <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputName\">Name</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Name\" \n                        value={ this.state.name } \n                        onChange = {e => this.setState({name: e.target.value})}\n                    />\n\n                        </div>\n                        <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputAddress\">Address</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Address\"  \n                    value={ this.state.address } \n                    onChange = {e => this.setState({address: e.target.value})}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputPhone\">Phone No.</label>\n                    <input type=\"string\" className=\"form-control\" placeholder=\"Phone No.\"  \n                    value={ this.state.phone } \n                    onChange = {e => this.setState({phone: e.target.value})}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputDeposit\">Initial Deposit</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Initial Deposit\"  \n                    value={ this.state.balance } \n                    onChange = {e => this.setState({balance: e.target.value})}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputDeposit\">Account Type</label>\n                    <select type=\"text\" className=\"form-control\" placeholder=\"Account Type\"  \n                    value={ this.state.type } \n                    onChange = {e => this.setState({type: e.target.value})}\n                    >\n                    <option value=\"\">Select Type</option>\n                    <option value=\"saving\">Saving</option>\n                    <option value=\"current\">Current</option>\n                    </select>\n                </div>\n                <div style={{ textAlign: 'center'}}>\n                <Route render={({ history}) => (\n                  \n            <button\n              type='button'\n              className=\"btn btn-danger\"\n              style={{ marginRight: '15px' }}\n              onClick={() => { history.push('/') }}\n            >\n              Cancel\n            </button>\n              )} />\n                <button type=\"submit\" className=\"btn btn-success\"  >Submit</button>\n                </div>\n\n                <br/>\n\n{sucessMessage}\n\n{accountDetails}\n\n                      </fieldset>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n       \n      );\n    }\n  };\n\nexport default CreateAccount;","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\n\nclass Detail extends Component {\n    state = {  }\n\n    getFormatedDate = (date) => {\n        let formatedDate = new Date(date);\n        return formatedDate.toString();\n    }\n\n    getAllTransation = () => {\n        let html = this.props.accountInfo.transations.map(tran => {\n            return <tr key={tran._id} ><td> {tran.transationType } </td><td className={ tran.transationType === 'Withdraw' ? 'withdraw' : 'deposit' }> #{tran.amount } </td><td> { this.getFormatedDate(tran.date) }</td></tr>\n        })\n\n        return html;\n    }\n\n    render() {\n      \n        return ( \n            <div className body>\n            <div className=\"body\">\n              <div className=\"row\">\n                <div className=\"col-sm-4\">\n                    <label>Account Number:</label>\n                </div>\n                <div className=\"col-sm-8\">\n                    <span>{ this.props.accountInfo.accountNumber }</span> \n                </div>\n               </div>\n               <div className=\"row\">\n                <div className=\"col-sm-4\">\n                    <label>Account Type:</label>\n                </div>\n                <div className=\"col-sm-8\">\n                    <span>{ this.props.accountInfo.type }</span> \n                </div>\n               </div>\n               <div className=\"row\">\n                <div className=\"col-sm-4\">\n                    <label>Name:</label>\n                </div>\n                <div className=\"col-sm-8\">\n                <span>{ this.props.accountInfo.name }</span> \n                </div>\n                </div>\n                <div className=\"row\">\n                <div className=\"col-sm-4\">\n                    <label>Address:</label>\n                </div>\n                <div className=\"col-sm-8\">\n                <span>{ this.props.accountInfo.address }</span> \n                </div>\n                </div>\n                <div className=\"row\">\n                <div className=\"col-sm-4\">\n                    <label>Phone No. :</label>\n                </div>\n                <div className=\"col-sm-8\">\n                <span>{ this.props.accountInfo.phone }</span> \n                </div>\n                </div>\n                <div className=\"row\">\n                <div className=\"col-sm-4\">\n                    <label>Balance :</label>\n                </div>\n                <div className=\"col-sm-8\">\n                <span><b>#{ this.props.accountInfo.balance }</b></span> \n                </div>\n                </div>\n                <div className=\"row\">\n                <div className=\"col-sm-4\">\n                    <label>Last Transation Date:</label>\n                </div>\n                <div className=\"col-sm-8\">\n                <span> { this.getFormatedDate(this.props.accountInfo.lasttransation) }</span> \n                </div>\n                </div><br/>\n                <div className=\"row\">\n                    <div className=\"col-sm-12\"> \n                    <table className=\"table table-bordered table-striped\">\n                        <thead>\n                            <tr><th>Transation Type</th><th>Amount</th><th>Date</th></tr>    \n                        </thead>    \n                        <tbody>\n                            { this.getAllTransation() }\n                        </tbody>\n                    </table>\n                    </div>\n                </div>\n                <div className=\"row\">\n                <div className=\"col-sm-12\"    style={{ textAlign: 'right'}}>\n                <Route render={({ history}) => (\n                <button\n                  type='button'\n                  className=\"btn btn-info\"\n                  onClick={() => { history.push('/') }}\n                  style={{ marginRight: '15px'}}\n                >\n                 Home\n                </button>\n                  )} />\n                   <Route render={({ history}) => (\n                <button\n                  type='button'\n                  className=\"btn btn-success\"\n                  onClick={() => { history.push('/deposit') }}  \n                  style={{ marginRight: '15px'}}\n                >\n                 Deposit Fund\n                </button>\n                  )} />\n                   <Route render={({ history}) => (\n                <button\n                  type='button'\n                  className=\"btn btn-danger\"\n                  onClick={() => { history.push('/withdraw') }}\n                >\n                 Withdraw Fund\n                </button>\n                  )} />\n                </div>\n                </div>\n            </div>\n            </div> \n         );\n    }\n}\n \nexport default Detail;","import React from 'react';\nimport Detail from './Detail';\nimport { Route } from 'react-router-dom';\n\nclass AccountDetails extends React.Component{\n\n    state = { accountNumber : \"\" , accountInfo: null }\n\n    getDtails = () => {\n    \n        const request = new Request('/account/' + this.state.accountNumber , {\n            method: 'GET',  \n            crossDomain:true,\n            redirect: 'follow',\n            credentials: 'same-origin',\n            headers: new Headers({'Content-Type': 'application/json'})\n          });\n    \n          fetch(request)\n            .then(response => { return response.json(); })\n            .then(data => { \n                this.setState({ accountInfo: data })\n            } )\n            .catch(errors => { console.log(`Could not fetch Account Details: ${errors}`);})\n\n    }\n\n    render(){\n      let detailHtml = \"\";\n      if(this.state.accountInfo !== null){\n        detailHtml = <Detail accountInfo={ this.state.accountInfo } />\n      }\n\n        return(\n          <div className=\"body\">\n          <link href=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\" />\n          {/*---- Include the above in your HEAD tag --------*/}\n        \n            <div className=\"row\">\n              <div className=\"col-md-4 col-md-offset-4\">\n                <div className=\"panel panel-default\">\n                  <div className=\"panel-heading\">\n                    <h3 className=\"panel-title\">Check Account Details</h3>\n                  </div>\n                  <div className=\"panel-body\">\n                   \n                      <fieldset>\n                      <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputAddress\">Please enter your account number</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Account Number\" style={ { width: '300px' } }\n                    value={ this.state.accountNumber } \n                    onChange = {e => this.setState({accountNumber: e.target.value})}\n                    />\n                </div>\n\n                  \n                <Route render={({ history}) => (\n                <button\n                  type='button'\n                  className=\"btn btn-danger\"\n                  style={{ marginRight: '15px'}}\n                  onClick={() => { history.push('/') }}\n                >\n                  Cancel\n                </button>\n                  )} />\n                <button type=\"submit\" className=\"btn btn-success\" onClick={this.getDtails}>Submit</button>\n                \n                { detailHtml }\n\n\n\n                      </fieldset>\n                    \n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n       \n      );\n    }\n  };\n\nexport default AccountDetails;","import React, { Component } from 'react';\nimport Detail from './Detail';\nimport { Route } from 'react-router-dom';\n\n\nclass Withdraw extends Component {\n    state = { accountNumber : \"\" , withdrawAmount: \"\", accountInfo: null,  messageData: null }\n\n    withdrawFund = () => {\n        const request = new Request('/account/withdraw/' + this.state.accountNumber, {\n            crossDomain:true,\n            method: 'PUT',  \n            redirect: 'follow',\n            headers: new Headers({'Content-Type': 'application/json'}),\n            credentials: 'same-origin',\n            body: JSON.stringify({\n                'amount': this.state.withdrawAmount\n            })\n          });\n    \n          fetch(request)\n            .then(response => { return response.json(); })\n            .then(res => {   \n                if(res.type === 'success'){\n                  this.setState({ accountInfo: res.data })\n                }else{\n                  this.setState({messageData: res})\n                }\n            })\n            .catch(errors => { console.log(errors);})\n    }\n\n    render() { \n      var errorMessage = \"\";\n   \n      if (this.state.messageData !== null && this.state.messageData.type === 'danger') {\n        errorMessage =  <div className=\"alert alert-danger\" role=\"alert\" style={{ marginTop: '15px'}}>{ this.state.messageData.message }</div>;\n      }\n\n        let detailHtml = \"\";\n        if(this.state.accountInfo !== null){\n          detailHtml = <Detail accountInfo={ this.state.accountInfo } />\n        }\n\n        return ( \n          <div className=\"body\">\n          <link href=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\" />\n          {/*---- Include the above in your HEAD tag --------*/}\n        \n            <div className=\"row\">\n              <div className=\"col-md-4 col-md-offset-4\">\n                <div className=\"panel panel-default\">\n                  <div className=\"panel-heading\">\n                    <h3 className=\"panel-title\">Withdraw</h3>\n                  </div>\n                  <div className=\"panel-body\">\n                   \n                      <fieldset>\n                      <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputAddress\">Please enter your account number</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Account Number\" style={ { width: '300px' } }\n                    value={ this.state.accountNumber } \n                    onChange = {e => this.setState({accountNumber: e.target.value})}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputAddress\">Please enter withdral amount</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Amount\" style={ { width: '300px' } }\n                    value={ this.state.withdrawAmount } \n                    onChange = {e => this.setState({withdrawAmount: e.target.value})}\n                    />\n                </div>\n                 \n               \n                <Route render={({ history}) => (\n                <button\n                  type='button'\n                  className=\"btn btn-danger\"\n                  style={{ marginRight: '15px' }}\n                  onClick={() => { history.push('/') }}\n                >\n                  Cancel\n                </button>\n                  )} />\n                <button type=\"submit\" className=\"btn btn-success\" onClick={this.withdrawFund}>Submit</button>\n                <div>\n                { errorMessage }\n                { detailHtml }\n                </div>\n\n\n                      </fieldset>\n                    \n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n       \n      );\n    }\n  };\n \nexport default Withdraw;","import React, { Component } from 'react';\nimport Detail from './Detail';\nimport { Route } from 'react-router-dom';\n\n\nclass Deposit extends Component {\n    state = { accountNumber : \"\" , depositAmount: \"\", accountInfo: null, messageData: null }\n\n    depositFund = () => {\n        const request = new Request('/account/deposit/' + this.state.accountNumber, {\n            crossDomain:true,\n            method: 'PUT',  \n            redirect: 'follow',\n            headers: new Headers({'Content-Type': 'application/json'}),\n            credentials: 'same-origin',\n            body: JSON.stringify({\n                'amount': this.state.depositAmount\n            })\n          });\n    \n          fetch(request)\n            .then(response => { return response.json(); })\n            .then(res => {   \n              if(res.type === 'success'){\n                this.setState({ accountInfo: res.data })\n              }else{\n                this.setState({messageData: res})\n              }\n            })\n            .catch(errors => { console.log(errors)})\n    }\n\n    render() { \n\n      var errorMessage = \"\";\n   \n      if (this.state.messageData !== null && this.state.messageData.type === 'danger') {\n        errorMessage =  <div className=\"alert alert-danger\" role=\"alert\" style={{ marginTop: '15px'}}>{ this.state.messageData.message }</div>;\n      }\n\n        let detailHtml = \"\";\n        if(this.state.accountInfo !== null){\n          detailHtml = <Detail accountInfo={ this.state.accountInfo } />\n        }\n\n        return ( \n          <div className=\"body\">\n          <link href=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\" />\n          {/*---- Include the above in your HEAD tag --------*/}\n        \n            <div className=\"row\">\n              <div className=\"col-md-4 col-md-offset-4\">\n                <div className=\"panel panel-default\">\n                  <div className=\"panel-heading\">\n                    <h3 className=\"panel-title\">Deposit</h3>\n                  </div>\n                  <div className=\"panel-body\">\n                   \n                      <fieldset>\n                      <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputAddress\">Please enter your account number</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Account Number\" style={ { width: '300px' } }\n                    value={ this.state.accountNumber } \n                    onChange = {e => this.setState({accountNumber: e.target.value})}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputAddress\">Please enter deposit amount</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Amount\" style={ { width: '300px' } }\n                    value={ this.state.depositAmount } \n                    onChange = {e => this.setState({depositAmount: e.target.value})}\n                    />\n                    </div>\n               \n                    <Route render={({ history}) => (\n                <button\n                  type='button'\n                  className=\"btn btn-success\"\n                  style={{ marginRight: '15px' }}\n                  onClick={() => { history.push('/') }}\n                >\n                  Cancel\n                </button>\n                  )} />\n                <button type=\"submit\" className=\"btn btn-danger\" onClick={this.depositFund}>Submit</button>\n                { errorMessage }\n                { detailHtml }\n\n\n                      </fieldset>\n                    \n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n       \n      );\n    }\n  };\n \nexport default Deposit;","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nclass Transations extends React.Component{\n\n    state = { accountNumber : \"\" , transations: null }\n\n    getTransation = () => {\n    \n        const request = new Request('/account/transations/' + this.state.accountNumber , {\n            method: 'GET',  \n            crossDomain:true,\n            redirect: 'follow',\n            credentials: 'same-origin',\n            headers: new Headers({'Content-Type': 'application/json'})\n          });\n    \n          fetch(request)\n            .then(response => { return response.json(); })\n            .then(data => { \n                this.setState({ transations: data })\n            } )\n            .catch(errors => { console.log(`Could not fetch Account Details: ${errors}`);})\n\n    }\n    \n    getFormatedDate = (date) => {\n        let formatedDate = new Date(date);\n        return formatedDate.toString();\n    }\n\n    getAllTransation = () => {\n            if(this.state.transations !== null){\n            let html = this.state.transations.map(tran => {\n                return <tr key={tran._id} ><td> {tran.transationType } </td><td className={ tran.transationType === 'Withdraw' ? 'withdraw' : 'deposit' }> #{tran.amount } </td><td> { this.getFormatedDate(tran.date) }</td></tr>\n            })\n\n            return html;\n        }\n    }\n\n    render(){\n     \n        return(\n            <div className=\"body\">\n            <link href=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\" />\n            {/*---- Include the above in your HEAD tag --------*/}\n          \n              <div className=\"row\">\n                <div className=\"col-md-4 col-md-offset-4\">\n                  <div className=\"panel panel-default\">\n                    <div className=\"panel-heading\">\n                      <h3 className=\"panel-title\">Check Account Transaction</h3>\n                    </div>\n                    <div className=\"panel-body\">\n                     \n                        <fieldset>\n                        <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputAddress\">Please enter your account number</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Account Number\" style={ { width: '300px' } }\n                    value={ this.state.accountNumber } \n                    onChange = {e => this.setState({accountNumber: e.target.value})}\n                    />\n                </div>\n  \n                <Route render={({ history}) => (\n                <button\n                  type='button'\n                  className=\"btn btn-danger\"\n                  style={{ marginRight: '15px' }}\n                  onClick={() => { history.push('/') }}\n                >\n                  Cancel\n                </button>\n                  )} />\n                <button type=\"submit\" className=\"btn btn-success\" onClick={this.getTransation}>Submit</button>\n           \n                    <table className=\"table table-bordered table-striped\" style={{ marginTop: '15px' }}>\n                        <thead>\n                            <tr><th>Transation Type</th><th>Amount</th><th>Date</th></tr>    \n                        </thead>    \n                        <tbody>\n                            { this.getAllTransation() }\n                        </tbody>\n                    </table>\n\n  \n  \n  \n                        </fieldset>\n                      \n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n         \n        );\n      }\n    };\nexport default Transations;","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport './App.css';\nimport CreateAccount from './components/CreateAccount';\nimport AccountDetails from './components/AccountDetails';\nimport Withdraw from './components/Withdraw';\nimport Deposit from './components/Deposit';\nimport Transactions from './components/Transactions';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>  \n        <Switch>\n          <Route exact path=\"/\" component={Home} />  \n          <Route path=\"/create\" component={CreateAccount} />   \n          <Route path=\"/accountDetails\" component={AccountDetails} />   \n          <Route path='/withdraw' component={ Withdraw } />    \n          <Route path='/deposit' component={ Deposit } />  \n          <Route path='/transactions' component={ Transactions } />  \n        </Switch> \n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App/>, document.querySelector(\"#root\"));"],"sourceRoot":""}